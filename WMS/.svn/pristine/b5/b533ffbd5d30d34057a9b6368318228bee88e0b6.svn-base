package web.picking;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import beans.Usuario;
import beans.encuentra.DataLineaRepo;
import dataTypes.DataIDIDDescripcion;
import logica.Logica;
import logica.Utilidades;

public class OptionPickingPackage extends Action 
{


	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception 
	{
		HttpSession session = request.getSession();
		Logica Logica = new Logica();
		
		try {
			Usuario uLog = (Usuario) session.getAttribute("uLogeado");
			Utilidades util = new Utilidades();
			int idEmpresa = util.darEmpresa(uLog);
			if(idEmpresa==0)
			{
				return mapping.findForward("LOGIN");
			}			
			
			String option = request.getParameter("option");	//opcion ingresada por el usuario
			int opcion = 0;
			try {
				opcion = Integer.parseInt(option);
			} catch (Exception e) {
				session.setAttribute("menError", "Seleccione una opcion valida");
				return mapping.findForward("no");
			}
			
			if(opcion == 1) {	//tomar bulto y especificar sobrantes
								//voy a buscar el bulto a la BD 
								//busco los articulos que no necesito y estan en el bulto
								//muestro articulos sobrantes y asignar una ubicacion (por defecto la ubicacion 0)
			}
			else {	//modifico el packing list 
					//(me llevo articulos sueltos y dejo bulto con PL modificado en la ubicacion)
					//redirecciono a /v3/handHeld/MobLineaRepoForm.jsp para continuar con el picking normal
			}
			
		} catch (Exception e) {
			// TODO: handle exception
		}
				
		return mapping.findForward("ok");
	}
	
}
