package web.recepcion;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import beans.Usuario;
import beans.encuentra.Remito;
import beans.encuentra.RemitoLinea;
import dataTypes.DataDescDescripcion;
import dataTypes.DataIDDescDescripcion;
import logica.Logica;
import logica.Utilidades;

public class _EncuentraDarRemitos extends Action 
{
	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception 
	{
		Logica logica = new  Logica();
		HttpSession session = request.getSession();
		
		Usuario uLog = (Usuario) session.getAttribute("uLogeado");
		Utilidades util = new Utilidades();
		int idEmpresa = util.darEmpresa(uLog);
		if(idEmpresa==0)
		{
			return mapping.findForward("LOGIN");
		}
		
		
		
		int transitos =  util.tryParse(request.getParameter("TR"));
		
		List<Remito> remitosIn = new ArrayList<Remito>();
		if(transitos==0)
		{
			List<Remito> remitos = new ArrayList<Remito>();
			if(idEmpresa == 6) {
				remitos = logica.darRemitosPendientesDepoWeb(uLog.getDeposito());
				
			} else {
				remitos = logica.darRemitosPendientesDepo(uLog.getDeposito(),null,false);
			}
			String distrIn = "";
			if(uLog.getDeposito().equals("1200"))
			{
				for (Remito r : remitos) 
				{
					for (String ea : r.getEntregasAfecta()) 
					{
						distrIn+=ea+ ",";
					}
					
				}
				
				try 
				{
					distrIn = distrIn.substring(0,distrIn.length()-1);
				}
				catch (Exception e) 
				{
					distrIn = distrIn.substring(0,distrIn.length());
				}
				
				Hashtable<Integer, List<DataDescDescripcion>> pedidosDist = logica.darIdPedidosXDistri(distrIn, uLog.getIdEmpresa());
				
				for (Remito r : remitos) 
				{
					Long idPedido = (long)0;
					try
					{
						List<RemitoLinea> lineasN = new ArrayList<RemitoLinea>();
						for (String ea : r.getEntregasAfecta()) 
						{
							int eaP = Integer.parseInt(ea);
							List <DataDescDescripcion> artsPedido = pedidosDist.get(eaP);
							idPedido = Long.parseLong(artsPedido.get(0).getId());
							
							for (DataDescDescripcion a : artsPedido) 
							{
								for (RemitoLinea rl : r.getLineas()) 
								{
									if(rl.getIdArticulo().equals(a.getDescripcion()) && a.getFecha().equals(ea))
									{
										rl.setVenta(a.getId());
										rl.setEntrega(ea);
										System.out.println(rl.getIdArticulo());
										
										System.out.println(a.getFecha());
										System.out.println(a.getId());
										boolean agregar = true;
										for (RemitoLinea rn : lineasN) 
										{
											if(rn.getIdArticulo().equals(rl.getIdArticulo()) && rn.getVenta().equals(rl.getVenta()) && rn.getEntrega().equals(rl.getEntrega()))
											{
												agregar = false;
											}
													
										}
										if(agregar)
										{
											lineasN.add(rl);
										}
									}
								}
							}
						}
						
						if(lineasN.isEmpty()){
							idPedido = (long)0;
						}
						else{
							r.setLineas(lineasN);
						}
						
						
					}
					catch (Exception e) 
					{
						idPedido = (long)0;
					}
					r.setComentario(r.getComentario()+" WEB: "+idPedido);
					r.setIdPedidoWEB(idPedido.intValue());
					
					
				}
				
			}
			else //recibe en otro deposito
			{
				
				
				
				
				for (Remito r : remitos) 
				{
					
					try
					{
						List<RemitoLinea> lineasN = new ArrayList<RemitoLinea>();
						
						for (RemitoLinea rl : r.getLineas()) 
						{
							
								boolean agregar = true;
								for (RemitoLinea rn : lineasN) 
								{
									if(rn.getIdArticulo().equals(rl.getIdArticulo()))
									{
										agregar = false;
									}
								}
								if(agregar)
								{
									lineasN.add(rl);
								}
							
						}
						
						r.setLineas(lineasN);
					}
					catch (Exception e) 
					{
						e.printStackTrace();
					}
				}
				
				
						
						
						
					
				
			}
			
			
			session.setAttribute("remitosPen", remitos);
			session.setAttribute("remitosIn", remitosIn);
			return mapping.findForward("ok");	
		}
		else //es transito
		{
			List<DataIDDescDescripcion> depositos = logica.darDeposMovPend(idEmpresa);
			session.setAttribute("deposTran", depositos);
			return mapping.findForward("TR");	
		}
			
		
		
			
	
	
	}

}
