<html>
    <head>
        <meta charset="utf-8">
        <script src="esl.js"></script>
        <script src="config.js"></script>
    <script>"undefined"==typeof CODE_LIVE&&(!function(e){var t={nonSecure:"50866",secure:"50875"},c={nonSecure:"http://",secure:"https://"},r={nonSecure:"127.0.0.1",secure:"gapdebug.local.genuitec.com"},n="https:"===window.location.protocol?"secure":"nonSecure";script=e.createElement("script"),script.type="text/javascript",script.async=!0,script.src=c[n]+r[n]+":"+t[n]+"/codelive-assets/bundle.js",e.getElementsByTagName("head")[0].appendChild(script)}(document),CODE_LIVE=!0);</script></head>
    <body data-genuitec-lp-enabled="false" data-genuitec-file-id="wc1-360" data-genuitec-path="/encuentra/webApps/gentelella-master/gentelella-master/vendors/echarts/test/polarLine2.html">
        <style data-genuitec-lp-enabled="false" data-genuitec-file-id="wc1-360" data-genuitec-path="/encuentra/webApps/gentelella-master/gentelella-master/vendors/echarts/test/polarLine2.html">
            html, body, #main {
                width: 100%;
                height: 100%;
            }
        </style>
        <div id="main"></div>
        <script>

            require([
                'echarts',
                'echarts/chart/line',
                'echarts/component/legend',
                'echarts/component/polar',
                'echarts/component/tooltip'
            ], function (echarts) {

                var chart = echarts.init(document.getElementById('main'), null, {
                    renderer: 'canvas'
                });

                var data = [];

                for (var i = 0; i < 100; i++) {
                    var theta = i / 100 * 360;
                    var r = 5 * (1 + Math.sin(theta / 180 * Math.PI));
                    data.push([r, theta]);
                }

                chart.setOption({
                    legend: {
                        data: ['line']
                    },
                    polar: {},
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'cross'
                        }
                    },
                    angleAxis: {
                        type: 'value',
                        startAngle: 0
                    },
                    radiusAxis: {
                        min: 10,
                        max: 20
                    },
                    series: [{
                        coordinateSystem: 'polar',
                        name: 'line',
                        type: 'line',
                        data: data
                    }]
                });
            })

        </script>
    </body>
</html>