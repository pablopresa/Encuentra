package web.picking;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import beans.Usuario;
import beans.encuentra.DataLineaRepo;
import dataTypes.DataIDDescripcion;
import dataTypes.DataIDIDDescripcion;
import logica.Logica;
import logica.Utilidades;
import models.PickingBulto;
import beans.elementoPicking;

public class PickingPackage extends Action 
{


	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception 
	{
		HttpSession session = request.getSession();
		Logica Logica = new Logica();
		
		try {
			Usuario uLog = (Usuario) session.getAttribute("uLogeado");
			Utilidades util = new Utilidades();
			int idEmpresa = util.darEmpresa(uLog);
			if(idEmpresa==0)
			{
				return mapping.findForward("LOGIN");
			}			
						
			int idDepoWEB = util.darParametroEmpresaINT(idEmpresa,5);
			boolean verific = util.darParametroEmpresaBool(idEmpresa,1);
			
			PickingBulto pickingBulto = (PickingBulto) session.getAttribute("modeloPickingBulto");
			boolean persistio = true;
			
			String articulo = request.getParameter("idArticulo");
			
			if(articulo == null || articulo.equals("")) {
				session.setAttribute("menError", "No se reconocio ningun articulo");
				return mapping.findForward("pick");
			}
			else{
				if(pickingBulto.getArticulo_lineasRepo().get(articulo)!= null) {
					for (DataLineaRepo articuloEnBulto : pickingBulto.getArticulo_lineasRepo().get(articulo)) {
						if(articuloEnBulto.getSolicitada() > articuloEnBulto.getPicked()) {
							//persistio = Logica.encuentraUpdateAvancePicking(pickingBulto.getIdPicking(),articuloEnBulto.getIdArticulo(), articuloEnBulto.getSolicitada(),articuloEnBulto.getIdDepOrigen(),
								//	articuloEnBulto.getIdDepDestino(),verific,articuloEnBulto.getPedido(),articuloEnBulto.getDocumento(),idEmpresa,idDepoWEB,articuloEnBulto.getAutoVerificacion());
							
							if(!persistio) {
								session.setAttribute("menError", "No se pudo marcar como pickeado este articulo");
								return mapping.findForward("pick");
							}
							else {
								//sumo uno a dataLineaRepo
								int pickedRepo = articuloEnBulto.getPicked() + 1;
								articuloEnBulto.setPicked(pickedRepo);								
								
								//sumo uno a la coleccion de articulos a mostrar
								int picked = pickingBulto.getElementos().get(articulo).getPick() + 1;
								pickingBulto.getElementos().get(articulo).setPick(picked);
								
								//refresoc info para la UI
								pickingBulto.refreshListaElementos();
								
								//sumo uno a cantidad contada
								int count = pickingBulto.getCount() + 1;
								pickingBulto.setCount(count);
							}
							break;
						}
					}
				}
				else {
					session.setAttribute("menError", "Este bulto no contiene articulos para pickear");
				}
							
				session.setAttribute("modeloPickingBulto", pickingBulto);				
			}
			
			
		} catch (Exception e) {
			session.setAttribute("menError", "Sucedio un error, comuniquese con soporte");
		}
				
		return mapping.findForward("pick");
	}
	
}
