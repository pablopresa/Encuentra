/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.61
 * Generated at: 2021-10-18 15:13:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.v3.util;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/c.tld", Long.valueOf(1634565188227L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function getCookie(cname) {\r\n");
      out.write("  var name = cname + \"=\";\r\n");
      out.write("  var decodedCookie = decodeURIComponent(document.cookie);\r\n");
      out.write("  var ca = decodedCookie.split(';');\r\n");
      out.write("  for(var i = 0; i <ca.length; i++) {\r\n");
      out.write("    var c = ca[i];\r\n");
      out.write("    while (c.charAt(0) == ' ') {\r\n");
      out.write("      c = c.substring(1);\r\n");
      out.write("    }\r\n");
      out.write("    if (c.indexOf(name) == 0) {\r\n");
      out.write("      return c.substring(name.length, c.length);\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("  return \"\";\r\n");
      out.write("}\r\n");
      out.write("function checkCookie() \r\n");
      out.write("{\r\n");
      out.write("  var empresa = getCookie(\"empresa\");\r\n");
      out.write("  if (empresa != \"\") \r\n");
      out.write("  {\r\n");
      out.write(" \t\twindow.location.assign('");
      out.print(basePath);
      out.write("/'+empresa+'/login.jsp')\r\n");
      out.write("  } \r\n");
      out.write("  else \r\n");
      out.write("  {\r\n");
      out.write("    empresa = prompt(\"Por favor indique empresa:\", \"\");\r\n");
      out.write("    if (empresa != \"\" && empresa != null) {\r\n");
      out.write("      setCookie(\"empresa\", empresa, 365);\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function setCookie(cname, cvalue, exdays) {\r\n");
      out.write("  var d = new Date();\r\n");
      out.write("  d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n");
      out.write("  var expires = \"expires=\"+d.toUTCString();\r\n");
      out.write("  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n");
      out.write("  window.location.assign('");
      out.print(basePath);
      out.write("/'+cvalue+'/login.jsp');\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("    <title>Encuentra</title>\r\n");
      out.write("    <!-- Favicon icon -->\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"");
      out.print(basePath);
      out.write("/v3/assets/images/encuentra_favicon.ico\">\r\n");
      out.write("    <!-- HTML5 Shim and Respond.js IE10 support of HTML5 elements and media queries -->\r\n");
      out.write("    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\r\n");
      out.write("    <!--[if lt IE 10]>\r\n");
      out.write("\t\t<script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\r\n");
      out.write("\t\t<script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\r\n");
      out.write("\t\t<![endif]-->\r\n");
      out.write("    <!-- Meta -->\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=0, minimal-ui\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("    <meta name=\"description\" content=\"\"/>\r\n");
      out.write("    <meta name=\"keywords\" content=\"\"/>\r\n");
      out.write("    <meta name=\"author\" content=\"CodedThemes\" />\r\n");
      out.write("\r\n");
      out.write("    <!-- fontawesome icon -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("v3/assets/fonts/fontawesome/css/fontawesome-all.min.css\">\r\n");
      out.write("    <!-- animation css -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("v3/assets/plugins/animation/css/animate.min.css\">\r\n");
      out.write("    <!-- vendor css -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("v3/assets/plugins/bootstrap/css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("v3/assets/fonts/feather/css/feather.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("v3/assets/plugins/jquery-scrollbar/css/perfect-scrollbar.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("v3/assets/fonts/datta/datta-icon.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("v3/assets/plugins/animation/css/animate.min.css\">\r\n");
      out.write("    <!-- notification css -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("v3/assets/plugins/notification/css/notification.min.css\">\r\n");
      out.write("    \r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("v3/assets/css/style.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("  background-image: url('");
      out.print(basePath);
      out.write("v3/assets/login-background.jpg');\r\n");
      out.write("  background-repeat: no-repeat;\r\n");
      out.write("  background-attachment: fixed; \r\n");
      out.write("  background-size: cover;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body onload=\"checkCookie()\">\r\n");
      out.write("    <div class=\"auth-wrapper\">\r\n");
      out.write("        <div class=\"auth-content rounded\">\r\n");
      out.write("            <div class=\"card rounded\">\r\n");
      out.write("\t                <div class=\"card-body text-center border border-success rounded\">\r\n");
      out.write("\t                    <div class=\"mb-4\">\r\n");
      out.write("\t                        <i class=\"feather icon-unlock auth-icon\"></i>\r\n");
      out.write("\t                    </div>\r\n");
      out.write("\t                    <h3 class=\"mb-4\">Login</h3>\r\n");
      out.write("\t                    <form action=\"");
      out.print(basePath);
      out.write("/loginEncuentra.do\" method=\"post\">\r\n");
      out.write("\t\t                    <div class=\"input-group mb-3\">\r\n");
      out.write("\t\t                        <input type=\"text\" class=\"form-control\" placeholder=\"Usuario\" name=\"nombreUsuario\">\r\n");
      out.write("\t\t                    </div>\r\n");
      out.write("\t\t                    <div class=\"input-group mb-4\">\r\n");
      out.write("\t\t                        <input type=\"password\" class=\"form-control\" placeholder=\"Contraseña\" name=\"password\">\r\n");
      out.write("\t\t                    </div>\r\n");
      out.write("\t\t                    <input class=\"d-none\" type=\"text\" maxlength=\"2\" name=\"pc\" value=\"1\"><br/>\r\n");
      out.write("\t\t                    <input class=\"d-none\" type=\"text\" maxlength=\"2\" name=\"idEmpresa\" value=\"2\" ><br/>\r\n");
      out.write("\t\t                    <input type=\"submit\" value=\"Entrar\" class=\"btn btn-success shadow-2 mb-4\">\r\n");
      out.write("\t\t                    <p style=\"color: red;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mensaje}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("\t                    </form>\r\n");
      out.write("\t                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Required Js -->\r\n");
      out.write("     <script src=\"");
      out.print(basePath);
      out.write("v3/assets/js/vendor-all.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(basePath);
      out.write("v3/assets/plugins/bootstrap/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(basePath);
      out.write("v3/assets/js/pcoded.min.js\"></script>\r\n");
      out.write("    \r\n");
request.getSession(true).invalidate(); 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
