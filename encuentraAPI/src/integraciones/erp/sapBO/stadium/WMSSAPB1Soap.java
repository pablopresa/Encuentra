
package integraciones.erp.sapBO.stadium;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * 
 */
@WebService(name = "WMSSAPB1Soap", targetNamespace = "http://tempuri.org/")
public interface WMSSAPB1Soap {

	/**
	 * PERMITE INICIAR SESION EN SAP
	 * 
	 * @param compUser
	 * @param dbName
	 * @param compPwd
	 * @param dbType
	 * @param language
	 * @param licenseServer
	 * @param dbServer
	 * @return returns javax.xml.ws.Response<wsSAP.LoginResponse>
	 */
	@WebMethod(operationName = "Login", action = "http://tempuri.org/Login")
	@RequestWrapper(localName = "Login", targetNamespace = "http://tempuri.org/", className = "wsSAP.Login")
	@ResponseWrapper(localName = "LoginResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.LoginResponse")
	public Response<LoginResponse> loginAsync(
			@WebParam(name = "dbServer", targetNamespace = "http://tempuri.org/") String dbServer,
			@WebParam(name = "dbName", targetNamespace = "http://tempuri.org/") String dbName,
			@WebParam(name = "dbType", targetNamespace = "http://tempuri.org/") String dbType,
			@WebParam(name = "compUser", targetNamespace = "http://tempuri.org/") String compUser,
			@WebParam(name = "compPwd", targetNamespace = "http://tempuri.org/") String compPwd,
			@WebParam(name = "language", targetNamespace = "http://tempuri.org/") String language,
			@WebParam(name = "licenseServer", targetNamespace = "http://tempuri.org/") String licenseServer);

	/**
	 * PERMITE INICIAR SESION EN SAP
	 * 
	 * @param compUser
	 * @param dbName
	 * @param compPwd
	 * @param dbType
	 * @param language
	 * @param asyncHandler
	 * @param licenseServer
	 * @param dbServer
	 * @return returns java.util.concurrent.Future<? extends java.lang.Object>
	 */
	@WebMethod(operationName = "Login", action = "http://tempuri.org/Login")
	@RequestWrapper(localName = "Login", targetNamespace = "http://tempuri.org/", className = "wsSAP.Login")
	@ResponseWrapper(localName = "LoginResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.LoginResponse")
	public Future<?> loginAsync(@WebParam(name = "dbServer", targetNamespace = "http://tempuri.org/") String dbServer,
			@WebParam(name = "dbName", targetNamespace = "http://tempuri.org/") String dbName,
			@WebParam(name = "dbType", targetNamespace = "http://tempuri.org/") String dbType,
			@WebParam(name = "compUser", targetNamespace = "http://tempuri.org/") String compUser,
			@WebParam(name = "compPwd", targetNamespace = "http://tempuri.org/") String compPwd,
			@WebParam(name = "language", targetNamespace = "http://tempuri.org/") String language,
			@WebParam(name = "licenseServer", targetNamespace = "http://tempuri.org/") String licenseServer,
			@WebParam(name = "asyncHandler", targetNamespace = "") AsyncHandler<LoginResponse> asyncHandler);

	/**
	 * PERMITE INICIAR SESION EN SAP
	 * 
	 * @param compUser
	 * @param dbName
	 * @param compPwd
	 * @param dbType
	 * @param language
	 * @param licenseServer
	 * @param dbServer
	 * @return returns java.lang.String
	 */
	@WebMethod(operationName = "Login", action = "http://tempuri.org/Login")
	@WebResult(name = "LoginResult", targetNamespace = "http://tempuri.org/")
	@RequestWrapper(localName = "Login", targetNamespace = "http://tempuri.org/", className = "wsSAP.Login")
	@ResponseWrapper(localName = "LoginResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.LoginResponse")
	public String login(@WebParam(name = "dbServer", targetNamespace = "http://tempuri.org/") String dbServer,
			@WebParam(name = "dbName", targetNamespace = "http://tempuri.org/") String dbName,
			@WebParam(name = "dbType", targetNamespace = "http://tempuri.org/") String dbType,
			@WebParam(name = "compUser", targetNamespace = "http://tempuri.org/") String compUser,
			@WebParam(name = "compPwd", targetNamespace = "http://tempuri.org/") String compPwd,
			@WebParam(name = "language", targetNamespace = "http://tempuri.org/") String language,
			@WebParam(name = "licenseServer", targetNamespace = "http://tempuri.org/") String licenseServer);

	/**
	 * PERMITE CERRAR UNA SESION CON SAP
	 * 
	 * @param psIdSesion
	 * @return returns javax.xml.ws.Response<wsSAP.LogoutResponse>
	 */
	@WebMethod(operationName = "Logout", action = "http://tempuri.org/Logout")
	@RequestWrapper(localName = "Logout", targetNamespace = "http://tempuri.org/", className = "wsSAP.Logout")
	@ResponseWrapper(localName = "LogoutResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.LogoutResponse")
	public Response<LogoutResponse> logoutAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion);

	/**
	 * PERMITE CERRAR UNA SESION CON SAP
	 * 
	 * @param asyncHandler
	 * @param psIdSesion
	 * @return returns java.util.concurrent.Future<? extends java.lang.Object>
	 */
	@WebMethod(operationName = "Logout", action = "http://tempuri.org/Logout")
	@RequestWrapper(localName = "Logout", targetNamespace = "http://tempuri.org/", className = "wsSAP.Logout")
	@ResponseWrapper(localName = "LogoutResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.LogoutResponse")
	public Future<?> logoutAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "asyncHandler", targetNamespace = "") AsyncHandler<LogoutResponse> asyncHandler);

	/**
	 * PERMITE CERRAR UNA SESION CON SAP
	 * 
	 * @param psIdSesion
	 * @return returns java.lang.String
	 */
	@WebMethod(operationName = "Logout", action = "http://tempuri.org/Logout")
	@WebResult(name = "LogoutResult", targetNamespace = "http://tempuri.org/")
	@RequestWrapper(localName = "Logout", targetNamespace = "http://tempuri.org/", className = "wsSAP.Logout")
	@ResponseWrapper(localName = "LogoutResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.LogoutResponse")
	public String logout(@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion);

	/**
	 * PERMITE AGREGAR UN CODIGO DE BARRA A UN ARTICULO
	 * 
	 * @param psCodArticulo
	 * @param psCodBarra
	 * @param psIdSesion
	 * @return returns javax.xml.ws.Response<wsSAP.CrearBarCodeResponse>
	 */
	@WebMethod(operationName = "CrearBarCode", action = "http://tempuri.org/CrearBarCode")
	@RequestWrapper(localName = "CrearBarCode", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearBarCode")
	@ResponseWrapper(localName = "CrearBarCodeResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearBarCodeResponse")
	public Response<CrearBarCodeResponse> crearBarCodeAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "psCodArticulo", targetNamespace = "http://tempuri.org/") String psCodArticulo,
			@WebParam(name = "psCodBarra", targetNamespace = "http://tempuri.org/") String psCodBarra);

	/**
	 * PERMITE AGREGAR UN CODIGO DE BARRA A UN ARTICULO
	 * 
	 * @param psCodArticulo
	 * @param psCodBarra
	 * @param asyncHandler
	 * @param psIdSesion
	 * @return returns java.util.concurrent.Future<? extends java.lang.Object>
	 */
	@WebMethod(operationName = "CrearBarCode", action = "http://tempuri.org/CrearBarCode")
	@RequestWrapper(localName = "CrearBarCode", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearBarCode")
	@ResponseWrapper(localName = "CrearBarCodeResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearBarCodeResponse")
	public Future<?> crearBarCodeAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "psCodArticulo", targetNamespace = "http://tempuri.org/") String psCodArticulo,
			@WebParam(name = "psCodBarra", targetNamespace = "http://tempuri.org/") String psCodBarra,
			@WebParam(name = "asyncHandler", targetNamespace = "") AsyncHandler<CrearBarCodeResponse> asyncHandler);

	/**
	 * PERMITE AGREGAR UN CODIGO DE BARRA A UN ARTICULO
	 * 
	 * @param psCodArticulo
	 * @param psCodBarra
	 * @param psIdSesion
	 * @return returns java.lang.String
	 */
	@WebMethod(operationName = "CrearBarCode", action = "http://tempuri.org/CrearBarCode")
	@WebResult(name = "CrearBarCodeResult", targetNamespace = "http://tempuri.org/")
	@RequestWrapper(localName = "CrearBarCode", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearBarCode")
	@ResponseWrapper(localName = "CrearBarCodeResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearBarCodeResponse")
	public String crearBarCode(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "psCodArticulo", targetNamespace = "http://tempuri.org/") String psCodArticulo,
			@WebParam(name = "psCodBarra", targetNamespace = "http://tempuri.org/") String psCodBarra);

	/**
	 * PERMITE CREAR UNA RECEPCION DE MERCADERIA
	 * 
	 * @param listaArticulos
	 * @param fechaDoc
	 * @param nroFactProv
	 * @param comentario
	 * @param psIdSesion
	 * @param codCliente
	 * @return returns javax.xml.ws.Response<wsSAP.CrearRecepcionResponse>
	 */
	@WebMethod(operationName = "CrearRecepcion", action = "http://tempuri.org/CrearRecepcion")
	@RequestWrapper(localName = "CrearRecepcion", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearRecepcion")
	@ResponseWrapper(localName = "CrearRecepcionResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearRecepcionResponse")
	public Response<CrearRecepcionResponse> crearRecepcionAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "fechaDoc", targetNamespace = "http://tempuri.org/") String fechaDoc,
			@WebParam(name = "nroFactProv", targetNamespace = "http://tempuri.org/") String nroFactProv,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario);

	/**
	 * PERMITE CREAR UNA RECEPCION DE MERCADERIA
	 * 
	 * @param listaArticulos
	 * @param fechaDoc
	 * @param nroFactProv
	 * @param comentario
	 * @param asyncHandler
	 * @param psIdSesion
	 * @param codCliente
	 * @return returns java.util.concurrent.Future<? extends java.lang.Object>
	 */
	@WebMethod(operationName = "CrearRecepcion", action = "http://tempuri.org/CrearRecepcion")
	@RequestWrapper(localName = "CrearRecepcion", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearRecepcion")
	@ResponseWrapper(localName = "CrearRecepcionResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearRecepcionResponse")
	public Future<?> crearRecepcionAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "fechaDoc", targetNamespace = "http://tempuri.org/") String fechaDoc,
			@WebParam(name = "nroFactProv", targetNamespace = "http://tempuri.org/") String nroFactProv,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario,
			@WebParam(name = "asyncHandler", targetNamespace = "") AsyncHandler<CrearRecepcionResponse> asyncHandler);

	/**
	 * PERMITE CREAR UNA RECEPCION DE MERCADERIA
	 * 
	 * @param listaArticulos
	 * @param fechaDoc
	 * @param nroFactProv
	 * @param comentario
	 * @param psIdSesion
	 * @param codCliente
	 * @return returns java.lang.String
	 */
	@WebMethod(operationName = "CrearRecepcion", action = "http://tempuri.org/CrearRecepcion")
	@WebResult(name = "CrearRecepcionResult", targetNamespace = "http://tempuri.org/")
	@RequestWrapper(localName = "CrearRecepcion", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearRecepcion")
	@ResponseWrapper(localName = "CrearRecepcionResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearRecepcionResponse")
	public String crearRecepcion(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "fechaDoc", targetNamespace = "http://tempuri.org/") String fechaDoc,
			@WebParam(name = "nroFactProv", targetNamespace = "http://tempuri.org/") String nroFactProv,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario);

	/**
	 * PERMITE CREAR UN TRASLADO DE STOCK
	 * 
	 * @param motivo
	 * @param almacenDestino
	 * @param listaArticulos
	 * @param serie
	 * @param nroSolTraslado
	 * @param almacenOrigen
	 * @param comentario
	 * @param psIdSesion
	 * @param codCliente
	 * @param prioridad
	 * @return returns javax.xml.ws.Response<wsSAP.CrearTrasladoResponse>
	 */
	@WebMethod(operationName = "CrearTraslado", action = "http://tempuri.org/CrearTraslado")
	@RequestWrapper(localName = "CrearTraslado", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearTraslado")
	@ResponseWrapper(localName = "CrearTrasladoResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearTrasladoResponse")
	public Response<CrearTrasladoResponse> crearTrasladoAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "nroSolTraslado", targetNamespace = "http://tempuri.org/") String nroSolTraslado,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos,
			@WebParam(name = "serie", targetNamespace = "http://tempuri.org/") String serie,
			@WebParam(name = "almacenDestino", targetNamespace = "http://tempuri.org/") String almacenDestino,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario,
			@WebParam(name = "prioridad", targetNamespace = "http://tempuri.org/") int prioridad,
			@WebParam(name = "motivo", targetNamespace = "http://tempuri.org/") int motivo,
			@WebParam(name = "almacenOrigen", targetNamespace = "http://tempuri.org/") String almacenOrigen);

	/**
	 * PERMITE CREAR UN TRASLADO DE STOCK
	 * 
	 * @param motivo
	 * @param almacenDestino
	 * @param listaArticulos
	 * @param serie
	 * @param nroSolTraslado
	 * @param almacenOrigen
	 * @param comentario
	 * @param asyncHandler
	 * @param psIdSesion
	 * @param codCliente
	 * @param prioridad
	 * @return returns java.util.concurrent.Future<? extends java.lang.Object>
	 */
	@WebMethod(operationName = "CrearTraslado", action = "http://tempuri.org/CrearTraslado")
	@RequestWrapper(localName = "CrearTraslado", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearTraslado")
	@ResponseWrapper(localName = "CrearTrasladoResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearTrasladoResponse")
	public Future<?> crearTrasladoAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "nroSolTraslado", targetNamespace = "http://tempuri.org/") String nroSolTraslado,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos,
			@WebParam(name = "serie", targetNamespace = "http://tempuri.org/") String serie,
			@WebParam(name = "almacenDestino", targetNamespace = "http://tempuri.org/") String almacenDestino,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario,
			@WebParam(name = "prioridad", targetNamespace = "http://tempuri.org/") int prioridad,
			@WebParam(name = "motivo", targetNamespace = "http://tempuri.org/") int motivo,
			@WebParam(name = "almacenOrigen", targetNamespace = "http://tempuri.org/") String almacenOrigen,
			@WebParam(name = "asyncHandler", targetNamespace = "") AsyncHandler<CrearTrasladoResponse> asyncHandler);

	/**
	 * PERMITE CREAR UN TRASLADO DE STOCK
	 * 
	 * @param motivo
	 * @param almacenDestino
	 * @param listaArticulos
	 * @param serie
	 * @param nroSolTraslado
	 * @param almacenOrigen
	 * @param comentario
	 * @param psIdSesion
	 * @param codCliente
	 * @param prioridad
	 * @return returns java.lang.String
	 */
	@WebMethod(operationName = "CrearTraslado", action = "http://tempuri.org/CrearTraslado")
	@WebResult(name = "CrearTrasladoResult", targetNamespace = "http://tempuri.org/")
	@RequestWrapper(localName = "CrearTraslado", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearTraslado")
	@ResponseWrapper(localName = "CrearTrasladoResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearTrasladoResponse")
	public String crearTraslado(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "nroSolTraslado", targetNamespace = "http://tempuri.org/") String nroSolTraslado,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos,
			@WebParam(name = "serie", targetNamespace = "http://tempuri.org/") String serie,
			@WebParam(name = "almacenDestino", targetNamespace = "http://tempuri.org/") String almacenDestino,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario,
			@WebParam(name = "prioridad", targetNamespace = "http://tempuri.org/") int prioridad,
			@WebParam(name = "motivo", targetNamespace = "http://tempuri.org/") int motivo,
			@WebParam(name = "almacenOrigen", targetNamespace = "http://tempuri.org/") String almacenOrigen);

	/**
	 * PERMITE CREAR UNA SOLICITUD DE TRASLADO
	 * 
	 * @param motivo
	 * @param almacenDestino
	 * @param listaArticulos
	 * @param nroSolTraslado
	 * @param comentario
	 * @param psIdSesion
	 * @param codCliente
	 * @param prioridad
	 * @return returns
	 *         javax.xml.ws.Response<wsSAP.CrearSolicitudDeTrasladoResponse>
	 */
	@WebMethod(operationName = "CrearSolicitudDeTraslado", action = "http://tempuri.org/CrearSolicitudDeTraslado")
	@RequestWrapper(localName = "CrearSolicitudDeTraslado", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearSolicitudDeTraslado")
	@ResponseWrapper(localName = "CrearSolicitudDeTrasladoResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearSolicitudDeTrasladoResponse")
	public Response<CrearSolicitudDeTrasladoResponse> crearSolicitudDeTrasladoAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "nroSolTraslado", targetNamespace = "http://tempuri.org/") String nroSolTraslado,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos,
			@WebParam(name = "almacenDestino", targetNamespace = "http://tempuri.org/") String almacenDestino,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario,
			@WebParam(name = "prioridad", targetNamespace = "http://tempuri.org/") int prioridad,
			@WebParam(name = "motivo", targetNamespace = "http://tempuri.org/") int motivo);

	/**
	 * PERMITE CREAR UNA SOLICITUD DE TRASLADO
	 * 
	 * @param motivo
	 * @param almacenDestino
	 * @param listaArticulos
	 * @param nroSolTraslado
	 * @param comentario
	 * @param asyncHandler
	 * @param psIdSesion
	 * @param codCliente
	 * @param prioridad
	 * @return returns java.util.concurrent.Future<? extends java.lang.Object>
	 */
	@WebMethod(operationName = "CrearSolicitudDeTraslado", action = "http://tempuri.org/CrearSolicitudDeTraslado")
	@RequestWrapper(localName = "CrearSolicitudDeTraslado", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearSolicitudDeTraslado")
	@ResponseWrapper(localName = "CrearSolicitudDeTrasladoResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearSolicitudDeTrasladoResponse")
	public Future<?> crearSolicitudDeTrasladoAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "nroSolTraslado", targetNamespace = "http://tempuri.org/") String nroSolTraslado,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos,
			@WebParam(name = "almacenDestino", targetNamespace = "http://tempuri.org/") String almacenDestino,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario,
			@WebParam(name = "prioridad", targetNamespace = "http://tempuri.org/") int prioridad,
			@WebParam(name = "motivo", targetNamespace = "http://tempuri.org/") int motivo,
			@WebParam(name = "asyncHandler", targetNamespace = "") AsyncHandler<CrearSolicitudDeTrasladoResponse> asyncHandler);

	/**
	 * PERMITE CREAR UNA SOLICITUD DE TRASLADO
	 * 
	 * @param motivo
	 * @param almacenDestino
	 * @param listaArticulos
	 * @param nroSolTraslado
	 * @param comentario
	 * @param psIdSesion
	 * @param codCliente
	 * @param prioridad
	 * @return returns java.lang.String
	 */
	@WebMethod(operationName = "CrearSolicitudDeTraslado", action = "http://tempuri.org/CrearSolicitudDeTraslado")
	@WebResult(name = "CrearSolicitudDeTrasladoResult", targetNamespace = "http://tempuri.org/")
	@RequestWrapper(localName = "CrearSolicitudDeTraslado", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearSolicitudDeTraslado")
	@ResponseWrapper(localName = "CrearSolicitudDeTrasladoResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearSolicitudDeTrasladoResponse")
	public String crearSolicitudDeTraslado(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "nroSolTraslado", targetNamespace = "http://tempuri.org/") String nroSolTraslado,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos,
			@WebParam(name = "almacenDestino", targetNamespace = "http://tempuri.org/") String almacenDestino,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario,
			@WebParam(name = "prioridad", targetNamespace = "http://tempuri.org/") int prioridad,
			@WebParam(name = "motivo", targetNamespace = "http://tempuri.org/") int motivo);

	/**
	 * PERMITE CREAR UNA ENTREGA
	 * 
	 * @param nroPedido
	 * @param listaArticulos
	 * @param nroEntrega
	 * @param comentario
	 * @param psIdSesion
	 * @param codCliente
	 * @return returns javax.xml.ws.Response<wsSAP.CrearEntregaResponse>
	 */
	@WebMethod(operationName = "CrearEntrega", action = "http://tempuri.org/CrearEntrega")
	@RequestWrapper(localName = "CrearEntrega", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearEntrega")
	@ResponseWrapper(localName = "CrearEntregaResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearEntregaResponse")
	public Response<CrearEntregaResponse> crearEntregaAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "nroPedido", targetNamespace = "http://tempuri.org/") String nroPedido,
			@WebParam(name = "nroEntrega", targetNamespace = "http://tempuri.org/") String nroEntrega,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos);

	/**
	 * PERMITE CREAR UNA ENTREGA
	 * 
	 * @param nroPedido
	 * @param listaArticulos
	 * @param nroEntrega
	 * @param comentario
	 * @param asyncHandler
	 * @param psIdSesion
	 * @param codCliente
	 * @return returns java.util.concurrent.Future<? extends java.lang.Object>
	 */
	@WebMethod(operationName = "CrearEntrega", action = "http://tempuri.org/CrearEntrega")
	@RequestWrapper(localName = "CrearEntrega", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearEntrega")
	@ResponseWrapper(localName = "CrearEntregaResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearEntregaResponse")
	public Future<?> crearEntregaAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "nroPedido", targetNamespace = "http://tempuri.org/") String nroPedido,
			@WebParam(name = "nroEntrega", targetNamespace = "http://tempuri.org/") String nroEntrega,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos,
			@WebParam(name = "asyncHandler", targetNamespace = "") AsyncHandler<CrearEntregaResponse> asyncHandler);

	/**
	 * PERMITE CREAR UNA ENTREGA
	 * 
	 * @param nroPedido
	 * @param listaArticulos
	 * @param nroEntrega
	 * @param comentario
	 * @param psIdSesion
	 * @param codCliente
	 * @return returns java.lang.String
	 */
	@WebMethod(operationName = "CrearEntrega", action = "http://tempuri.org/CrearEntrega")
	@WebResult(name = "CrearEntregaResult", targetNamespace = "http://tempuri.org/")
	@RequestWrapper(localName = "CrearEntrega", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearEntrega")
	@ResponseWrapper(localName = "CrearEntregaResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.CrearEntregaResponse")
	public String crearEntrega(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codCliente", targetNamespace = "http://tempuri.org/") String codCliente,
			@WebParam(name = "nroPedido", targetNamespace = "http://tempuri.org/") String nroPedido,
			@WebParam(name = "nroEntrega", targetNamespace = "http://tempuri.org/") String nroEntrega,
			@WebParam(name = "comentario", targetNamespace = "http://tempuri.org/") String comentario,
			@WebParam(name = "listaArticulos", targetNamespace = "http://tempuri.org/") ArrayOfUtilDesglose listaArticulos);

	/**
	 * PERMITE ACTUALIZAR EL TIPO DE CAMBIO. FORMATO DE FECHA: yyyy-mm-dd
	 * 
	 * @param codMoneda
	 * @param fechaBCU
	 * @param fechaSAP
	 * @param psIdSesion
	 * @return returns
	 *         javax.xml.ws.Response<wsSAP.ActualizarTipoDeCambioResponse>
	 */
	@WebMethod(operationName = "ActualizarTipoDeCambio", action = "http://tempuri.org/ActualizarTipoDeCambio")
	@RequestWrapper(localName = "ActualizarTipoDeCambio", targetNamespace = "http://tempuri.org/", className = "wsSAP.ActualizarTipoDeCambio")
	@ResponseWrapper(localName = "ActualizarTipoDeCambioResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.ActualizarTipoDeCambioResponse")
	public Response<ActualizarTipoDeCambioResponse> actualizarTipoDeCambioAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codMoneda", targetNamespace = "http://tempuri.org/") String codMoneda,
			@WebParam(name = "fechaBCU", targetNamespace = "http://tempuri.org/") String fechaBCU,
			@WebParam(name = "fechaSAP", targetNamespace = "http://tempuri.org/") String fechaSAP);

	/**
	 * PERMITE ACTUALIZAR EL TIPO DE CAMBIO. FORMATO DE FECHA: yyyy-mm-dd
	 * 
	 * @param codMoneda
	 * @param fechaBCU
	 * @param fechaSAP
	 * @param asyncHandler
	 * @param psIdSesion
	 * @return returns java.util.concurrent.Future<? extends java.lang.Object>
	 */
	@WebMethod(operationName = "ActualizarTipoDeCambio", action = "http://tempuri.org/ActualizarTipoDeCambio")
	@RequestWrapper(localName = "ActualizarTipoDeCambio", targetNamespace = "http://tempuri.org/", className = "wsSAP.ActualizarTipoDeCambio")
	@ResponseWrapper(localName = "ActualizarTipoDeCambioResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.ActualizarTipoDeCambioResponse")
	public Future<?> actualizarTipoDeCambioAsync(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codMoneda", targetNamespace = "http://tempuri.org/") String codMoneda,
			@WebParam(name = "fechaBCU", targetNamespace = "http://tempuri.org/") String fechaBCU,
			@WebParam(name = "fechaSAP", targetNamespace = "http://tempuri.org/") String fechaSAP,
			@WebParam(name = "asyncHandler", targetNamespace = "") AsyncHandler<ActualizarTipoDeCambioResponse> asyncHandler);

	/**
	 * PERMITE ACTUALIZAR EL TIPO DE CAMBIO. FORMATO DE FECHA: yyyy-mm-dd
	 * 
	 * @param codMoneda
	 * @param fechaBCU
	 * @param fechaSAP
	 * @param psIdSesion
	 * @return returns java.lang.String
	 */
	@WebMethod(operationName = "ActualizarTipoDeCambio", action = "http://tempuri.org/ActualizarTipoDeCambio")
	@WebResult(name = "ActualizarTipoDeCambioResult", targetNamespace = "http://tempuri.org/")
	@RequestWrapper(localName = "ActualizarTipoDeCambio", targetNamespace = "http://tempuri.org/", className = "wsSAP.ActualizarTipoDeCambio")
	@ResponseWrapper(localName = "ActualizarTipoDeCambioResponse", targetNamespace = "http://tempuri.org/", className = "wsSAP.ActualizarTipoDeCambioResponse")
	public String actualizarTipoDeCambio(
			@WebParam(name = "psIdSesion", targetNamespace = "http://tempuri.org/") String psIdSesion,
			@WebParam(name = "codMoneda", targetNamespace = "http://tempuri.org/") String codMoneda,
			@WebParam(name = "fechaBCU", targetNamespace = "http://tempuri.org/") String fechaBCU,
			@WebParam(name = "fechaSAP", targetNamespace = "http://tempuri.org/") String fechaSAP);

}
