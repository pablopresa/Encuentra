package clienteLaIsla;

import java.net.URL;
import java.security.cert.CertificateException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSession;
import javax.net.ssl.TrustManager;
import javax.net.ssl.X509TrustManager;

import org.apache.xmlrpc.client.XmlRpcClient;
import org.apache.xmlrpc.client.XmlRpcClientConfigImpl;

import com.sun.xml.wss.saml.internal.saml11.jaxb10.X509DataType.X509Certificate;

public class Pruebas {

	public static void main(String[] args) {
		final XmlRpcClient client = new XmlRpcClient();
		final XmlRpcClientConfigImpl common_config = new XmlRpcClientConfigImpl();
		
		try {
			/*common_config.setServerURL(
			    new URL(String.format("%s/xmlrpc/2/common", "laisla.quanam.com/web")));
				client.execute(common_config, "version", Collections.emptyList());*/
				
				//final XmlRpcClient client = new XmlRpcClient();

				/*final XmlRpcClientConfigImpl start_config = new XmlRpcClientConfigImpl();
				start_config.setBasicUserName("ws_encuentra");
				start_config.setBasicPassword("1234");
				start_config.setServerURL(new URL("laisla.quanam.com/web"));
				
				@SuppressWarnings("unchecked")
				final Map<String, String> info = (Map<String, String>)client.execute(
				    start_config, "start", Collections.emptyList());

				final String url = info.get("host"),
				              db = info.get("database"),
				        username = info.get("user"),
				        password = info.get("password");*/
			
			// Create a trust manager that does not validate certificate chains
				TrustManager[] trustAllCerts = new TrustManager[] {new X509TrustManager() {
	               public java.security.cert.X509Certificate[] getAcceptedIssuers() {
	                   return null;
	               }
	               public void checkClientTrusted(X509Certificate[] certs, String authType) {
	               }
	               public void checkServerTrusted(X509Certificate[] certs, String authType) {
	               }
					public void checkClientTrusted(java.security.cert.X509Certificate[] chain, String authType)
							throws CertificateException {
						// TODO Auto-generated method stub
						
					}
					public void checkServerTrusted(java.security.cert.X509Certificate[] chain, String authType)
							throws CertificateException {
						// TODO Auto-generated method stub
						
					}
				}
				};

				// Install the all-trusting trust manager
				SSLContext sc = SSLContext.getInstance("SSL");
				sc.init(null, trustAllCerts, new java.security.SecureRandom());
				HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());

				// 	Create all-trusting host name verifier
				HostnameVerifier allHostsValid = new HostnameVerifier() {
					public boolean verify(String hostname, SSLSession session) {
						return true;
					}
				};

				// Install the all-trusting host verifier
				HttpsURLConnection.setDefaultHostnameVerifier(allHostsValid);  
			
			final String url = "https://laisla.quanam.com",
		              db = "laisla",
		        username = "ws_encuentra",
		        password = "1234";
			common_config.setServerURL(
				    new URL(String.format("%s/xmlrpc/2/common",url)));
			
			int uid = (int)client.execute(
				    common_config, "authenticate", Arrays.asList(
				    		db, username, password, Collections.emptyList()));

			
			System.out.println(uid);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		/*final XmlRpcClientConfigImpl start_config = new XmlRpcClientConfigImpl();
		start_config.setServerURL(new URL("https://demo.odoo.com/start"));*/
		//@SuppressWarnings("unchecked")
		/*final Map<String, String> info = (Map<String, String>)client.execute(
		    start_config, "start", Collections.emptyList());*/
		

	}

}
