package aTest;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import com.itextpdf.text.pdf.ArrayBasedStringTokenizer;

import beans.encuentra.EncuentraPedido;
import beans.encuentra.EncuentraPedidoArticulo;
import clienteAPIEncuentra.Call_WS_APIENCUENTRA;
import dataTypes.DataIDDescripcion;
import logica.LogicaAPI;
import marketPlaceIntegrations.CanalMarketPlace;
import marketPlaceIntegrations.Fenicio.FenicioBAS;
import marketPlaceIntegrations.Fenicio.FenicioLAISLA;

public class ClienteLAISLAFenicio 
{
 
	public static void main(String[] args) 
	{
		FenicioLAISLA f = new FenicioLAISLA();
		
		 Hashtable<Integer, CanalMarketPlace> canales = f.getCanales();
		 
		 List<CanalMarketPlace> canalesL = new ArrayList<CanalMarketPlace> (canales.values());
		 
		 LogicaAPI logica = new LogicaAPI();
		 String token = logica.darToken(f.getIdEmpresa());
		 Call_WS_APIENCUENTRA cen = new Call_WS_APIENCUENTRA();
		 
		 
		 List<String> dirtySKUs = new ArrayList<String>();
		 
		 for (CanalMarketPlace canal : canalesL) 
		 {
			 List<EncuentraPedido> pedidos = f.getPedidos(canal.getId());
			 
			 for (EncuentraPedido p : pedidos) 
			 {
				 for (EncuentraPedidoArticulo a : p.getArticulosPedido()) 
				 {
					 try
					 {
						 String [] arreglo = a.getSKUFenicio().split(":");
						 //1:HOME-OLABAS:HOME-OLABAS:UNI:1
						 //0 1			 2			 3	 4
						 String sKU  = "";
						 String variacion = "";
						 
						 if(arreglo[2].equals(arreglo[1]))
						 {
						 
							 sKU = arreglo[2];
							 variacion = arreglo[3];
							 
						 }
						 else
						 {
							 sKU = arreglo[1]+"-"+arreglo[2];
							 variacion = arreglo[3];
						 }
						 
						 dirtySKUs.add(sKU+":"+variacion);
					 }
					 catch (Exception e) 
					 {
						System.out.println(a.getSKUFenicio());
					 }
				 }
			 }
			 
			 Hashtable<String, String> skuMapper = cen.searchSKU(token, dirtySKUs);
			 
			 for (EncuentraPedido p : pedidos) 
			 {
				 for (EncuentraPedidoArticulo a : p.getArticulosPedido()) 
				 {
					 try
					 {
						 String [] arreglo = a.getSKUFenicio().split(":");
						 //1:HOME-OLABAS:HOME-OLABAS:UNI:1
						 //0 1			 2			 3	 4
						 //1:CPAAM9:	64:			34:	 1
						 
						 
						 String sKU  = "";
						 String variacion = "";
						 
						 if(arreglo[2].equals(arreglo[1]))
						 {
						 
							 sKU = arreglo[2];
							 variacion = arreglo[3];
							 
						 }
						 else
						 {
							 sKU = arreglo[1]+"-"+arreglo[2];
							 variacion = arreglo[3];
						 }
						 
						 
						 String arti = skuMapper.get(sKU+":"+variacion);
						 
						
						 a.setOrigen(1);
						 
						
						 a.setArticulo(arti);
					 }
					 catch (Exception e) 
					 {
						
					 }
					 
					 
				 }
			 }
			 
			 
			 
			 List<DataIDDescripcion> retorno = cen.SaveOrders(token, pedidos);
			 
			 
			 
			 
			 
			 
			 
			 
			 cen.SaveOrdersArticulosReq(token, pedidos);
			 
		 }
		 
		 
		 
		 
		 
	}
	
}
