package integraciones.erp.odoo.laIsla;

import java.net.URL;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.CertificateException;
import java.util.Arrays;
import java.util.Collections;

import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSession;
import javax.net.ssl.TrustManager;
import javax.net.ssl.X509TrustManager;

import org.apache.xmlrpc.client.XmlRpcClient;
import org.apache.xmlrpc.client.XmlRpcClientConfigImpl;

public class ConexionIsla {
	

	
		final String url = "https://laisla.quanam.com", db = "laisla", username = "ws_encuentra", password = "1234";

		public static void main(String[] args) throws InterruptedException, KeyManagementException, NoSuchAlgorithmException {
			allowSSL();

			ClienteOdoo_LaIsla pruebas = new ClienteOdoo_LaIsla(false);
			int i = 1000;
			while ( i > 0) {
				System.out.println("invocacion:" + i + ":" + java.time.ZonedDateTime.now());
				int uid = pruebas.devolverUID();
				System.out.println(java.time.ZonedDateTime.now());
				i--;
				Thread.sleep(1000);
			}
			try {
				// pruebas.obtenerAlmacenes();
				/*
				 * pruebas.obtenerCategorias(); pruebas.obtenerMarcas();
				 * pruebas.obtenerTalles(); pruebas.obtenerColores();
				 * pruebas.obtenerTemporadas();
				 */
				// pruebas.obtenerProductos();
				// pruebas.obtenerStockProductos();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		public int devolverUID() {
			final XmlRpcClient client = new XmlRpcClient();
			final XmlRpcClientConfigImpl common_config = new XmlRpcClientConfigImpl();
			int uid = -1;
			try {

				common_config.setServerURL(new URL(String.format("%s/xmlrpc/2/common", url)));

				uid = (int) client.execute(common_config, "authenticate",
						Arrays.asList(db, username, password, Collections.emptyList()));
				System.out.println("el uid es: " + uid);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return uid;
		}

		public static void allowSSL() throws NoSuchAlgorithmException, KeyManagementException {

			// Create a trust manager that does not validate certificate chains
			TrustManager[] trustAllCerts = new TrustManager[] {new X509TrustManager() {
	           @Override
			public java.security.cert.X509Certificate[] getAcceptedIssuers() {
	               return null;
	           }


				@Override
				public void checkClientTrusted(java.security.cert.X509Certificate[] chain, String authType)
						throws CertificateException {
					// TODO Auto-generated method stub
					
				}
				@Override
				public void checkServerTrusted(java.security.cert.X509Certificate[] chain, String authType)
						throws CertificateException {
					// TODO Auto-generated method stub
					
				}
			}
			};

			// Install the all-trusting trust manager
			SSLContext sc = SSLContext.getInstance("SSL");
			sc.init(null, trustAllCerts, new java.security.SecureRandom());
			HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());

			// 	Create all-trusting host name verifier
			HostnameVerifier allHostsValid = new HostnameVerifier() {
				@Override
				public boolean verify(String hostname, SSLSession session) {
					return true;
				}
			};

			// Install the all-trusting host verifier
			HttpsURLConnection.setDefaultHostnameVerifier(allHostsValid);  
			
		}
	
}
