package integraciones.erp.billerTata;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import org.apache.axis.providers.java.MsgProvider;

import beans.Usuario;
import beans.api.MovStock;
import beans.api.pedidoFactura;
import beans.api.json.SendMail;
import beans.api.json.SendMailSpooler;
import beans.datatypes.DataIDDescripcion;
import logica.LogicaAPI;
import beans.encuentra.Cliente;
import integraciones.erp.visualStore.elrey.central.ClienteWSELREY;
import integraciones.erp.visualStore.elrey.comercioElectronico.ClienteWSfacturacion;
import integraciones.erp.visualStore.elrey.ecommerce.ClienteWS;
import integraciones.erp.visualStore.forus.central.OrdenVentaLinea;
import integraciones.erp.visualStore.objetos.OrdenVenta;
import integraciones.wms.Call_WS_APIENCUENTRA;



public class FacturadorBiller 
{
	static LogicaAPI lo = new LogicaAPI();
	static String msj, idMail;
	
	
	
	
	public static void main(String[] args) 
	{	
		LogicaAPI logica = new LogicaAPI();
		String token = logica.darToken(8,8000);
		Usuario u = LogicaAPI.loginEncuentraAPI2(token);
		int idEmpresa = u.getIdEmpresa();
		FacturadorBiller fb = new FacturadorBiller();
				
		while (true) {
			msj = "";
			idMail = "";
			try 
			{
				fb.putFacturacion(idEmpresa, 0L);
				
			} catch (Exception e) {System.out.println("Error grabando facturas");}
			
			
			
			try {
				Thread.sleep(60000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
				 
	}
	

	
	private  Hashtable<Integer,pedidoFactura> putFacturacion(int idEmpresa, Long idPedido) 
	{
		Hashtable<Integer,pedidoFactura> pedidos = new Hashtable<Integer, pedidoFactura>();
		List<OrdenVenta> ordenes = lo.darOrdensSinFacturar(idEmpresa,idPedido);
		
		
		ClienteBiller cliB = new ClienteBiller();
		for(OrdenVenta o:ordenes) 
		{
			try {
				Cliente c= lo.darCliente(o.getIdCarrito(), idEmpresa);

				Client cli = new Client("", c.getNombre(),c.getApellido(), c.getCalle()+" "+c.getNroPuerta(), "", c.getCiudad(), "3", c.getTelefono(), "UY", c.getDocumentoNro(), c.getEmail(), c.getDepartamento());
				Payments pay = new Payments(""+o.getImportePago(), "1", o.getFormaPago(), "UYU", "1");
				Payments [] pays = new Payments[] {pay};
				Items[] itms = new Items [o.getOrdenVentaLineas().size()];
				int i = 0;
				for (integraciones.erp.visualStore.objetos.OrdenVentaLinea l : o.getOrdenVentaLineas()) 
				{
					//me falta la descripcion
					
					Double totalAmount = (l.getPrecioImp()-l.getDescuento())*l.getCantidad();
					double sellingPrice = l.getPrecioImp()-l.getDescuento();
					
					Totals tot = new Totals(totalAmount+"",sellingPrice+"");
					Items itm = new Items(l.getIdArticulo(), l.getCantidad()+"", l.getDescripcion(),tot, "EA");
					
					itms[i]=itm;
					i++;
				}
				
				
				VentaBiller vta = new VentaBiller(o.getIdCarrito()+"", pays, cli, "384", "UYU", itms);
				
				
				
				String resp = cliB.grabarFactura(vta);
				
				int fact = 0;
				String msj = "";
				if(resp.equals(""))
				{
					fact = 100;
					msj="Esperando";
				}
				else
				{
					msj=resp;
				}
				
				lo.RegistrarFactura(o.getIdCarrito(), fact, idEmpresa,msj);
				
				
				
			} 
			catch (Exception e) {
				// TODO: handle exception
			}			
		}
		
		return pedidos;
	}



	public void liberarFactutra(Long idPedido) 
	{
		
		String update = "update ecommerce_import_venta SET sincronizada=0 where idEmpresa=8 AND idVenta="+idPedido+" AND sincronizada=-1";
		lo.persistir(update);
	}
	
	
}
