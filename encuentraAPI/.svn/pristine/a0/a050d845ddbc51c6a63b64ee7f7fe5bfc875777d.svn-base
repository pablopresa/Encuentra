package ws;

import java.io.IOException;
import java.util.ArrayList;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import json_objects.RetornoPedido;
import logica.Logica;
import logica.LogicaAPI;

import org.codehaus.jackson.map.ObjectMapper;

import com.google.gson.Gson;

import beans.Usuario;
import beans.api.Order;
import beans.api.ResponseOrder;
import beans.api.ResponseOrderFunctions;
import beans.encuentra.Movimiento;

import beans.encuentra.MovimientosC;

@Path("/another")
public class Pedidos 
{
	/*
	@GET
	@Path("/Pedido/{a}")
	@Produces(MediaType.APPLICATION_JSON)
	public String pedido(@PathParam ("a") int a)
	{
		
		RetornoPedido r = Logica.encuentraDarOjosPedido(a+"");
		
		try
		{
			ObjectMapper mapper = new ObjectMapper();
			String jsonInString = mapper.writeValueAsString(r);
			System.out.println(jsonInString);
			return jsonInString;
		}
		catch (Exception e2)
		{
			e2.printStackTrace();
			return e2.getMessage();
		}
		
		return "{"+
				"\"Pedido\": "+a+"," +
				"\"Cliente\": \"Test 01\", "+
				"\"Disponible_Retiro\": true, "+
				"\"Ubicaciones\": [ "+
				"\"Locker Secos A45\","+
				"\"Frezeer Congelados A12\","+
				"\"Heladeras Refrigerados A150\" "+
				"]"+
				"}";
			
	}
	*/
	@POST
	@Path("/users")

	//@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	//public String createUser(@FormParam("name") String name) throws IOException
	public String createUser(String data,@QueryParam ("token") String a) throws IOException
	{
	      //System.out.println(data);
		
		String mensaje ="";
		String json = "";
		int codResp=0;
		Usuario u = Logica.loginEncuentra(a);
		
		if (u.getNick() == null) 
		{
			mensaje="access_token invalido";
			
		}
		
		
		
		MovimientosC m = new MovimientosC();
		m=m.desempaquetar(data);
		
		
		System.out.println(m.getMovimientos().size());
		/*
		 * mensaje y catch faltan
		 */
		
		json= "{"+
				  "\"mensaje\": \""+mensaje+"\","+
				  "\"cod_respuesta\":\""+codResp+"\""+
				"}";
		System.out.println(a);
	      
		
		return json;
	   }

	@POST
	@Path("/putTracking")

	//@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	//public String createUser(@FormParam("name") String name) throws IOException
	public String putTracking(String data,@QueryParam ("token") String a) throws IOException
	{
	      //System.out.println(data);
		
		String mensaje ="";
		String json = "";
		Gson gson = new Gson();
		ResponseOrderFunctions response = new ResponseOrderFunctions();
		Usuario u = Logica.loginEncuentra(a);
		
		if (u.getNick() == null) 
		{
			response.setMessage("access_token invalido");	
		}
		else {
			System.out.println(data);
			Order order = new Order();
			order = gson.fromJson(data, Order.class);
			
			LogicaAPI.persistir("insert into producteca_ecom_envios (OPERATIONID, TRACKINGNUMBER, COURIER, URLTRACKING) values "
					+ "("+order.getId()+",'"+order.getTracking()+"',"+order.getCourier()+",'"+order.getUrlTracking()+"')");
			
			response.setMessage("ok");
			response.setOrders(new ArrayList<ResponseOrder>());
			response.getOrders().add(new ResponseOrder(order.getId(),"ok"));	
		}
		
		json = gson.toJson(response);      
		
		return json;
	   }
	
	@POST
	@Path("/updateOrder")

	//@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	//public String createUser(@FormParam("name") String name) throws IOException
	public String updateOrder(String data,@QueryParam ("token") String a) throws IOException
	{
	      //System.out.println(data);
		
		String json = "";
		Gson gson = new Gson();
		ResponseOrderFunctions response = new ResponseOrderFunctions();
		Usuario u = Logica.loginEncuentra(a);
		
		if (u.getNick() == null) 
		{
			response.setMessage("access_token invalido");	
		}
		else {
			System.out.println(data);
			Order order = new Order();
			order = gson.fromJson(data, Order.class);
			
			/*LogicaAPI.persistir("insert into producteca_ecom_envios (OPERATIONID, TRACKINGNUMBER, COURIER, URLTRACKING) values "
					+ "("+order.getId()+",'"+order.getTracking()+"',"+order.getCourier()+",'"+order.getUrlTracking()+"')");
			
			response.setMessage("ok");
			response.setOrders(new ArrayList<ResponseOrder>());
			response.getOrders().add(new ResponseOrder(order.getId(),"ok"));	*/
		}
		
		json = gson.toJson(response);      
		
		return json;
	   }
	
}
